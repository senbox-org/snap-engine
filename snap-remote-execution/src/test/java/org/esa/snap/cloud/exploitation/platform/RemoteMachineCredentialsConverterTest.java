package org.esa.snap.cloud.exploitation.platform;

import com.bc.ceres.binding.ConversionException;
import org.esa.snap.remote.execution.converters.RemoteMachinePropertiesConverter;
import org.esa.snap.remote.execution.machines.RemoteMachineProperties;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

/**
 * Created by jcoravu on 15/3/2019.
 */
public class RemoteMachineCredentialsConverterTest {

    public RemoteMachineCredentialsConverterTest() {
    }

    @Test
    public void testParseRemoteMachines() throws ConversionException {
        StringBuilder text = new StringBuilder();
        text.append("<machine host='192.168.61.19' port='22' operating-system='Linux' username='jean' password='jean' shared-folder='/home/jean/shared-ssh' gpt-file='/home/jean/snap/gpt' />");
        text.append("<machine host='127.0.0.1' port='123' operating-system='Windows' username='guest' password='guest' shared-folder='d:\\shared-folder' />");
        RemoteMachinePropertiesConverter converter = new RemoteMachinePropertiesConverter();
        RemoteMachineProperties[] remoteMachines = converter.parse(text.toString());
        assertNotNull(remoteMachines);
        assertEquals(2, remoteMachines.length);

        RemoteMachineProperties firstMachine = remoteMachines[0];
        assertNotNull(firstMachine);
        assertEquals("192.168.61.19", firstMachine.getHostName());
        assertEquals(22, firstMachine.getPortNumber());
        assertEquals("/home/jean/snap/gpt", firstMachine.getGPTFilePath());
        assertEquals("Linux", firstMachine.getOperatingSystemName());
        assertEquals("jean", firstMachine.getPassword());
        assertEquals("jean", firstMachine.getUsername());
        assertEquals("/home/jean/shared-ssh", firstMachine.getSharedFolderPath());

        RemoteMachineProperties secondMachine = remoteMachines[1];
        assertNotNull(secondMachine);
        assertEquals("127.0.0.1", secondMachine.getHostName());
        assertEquals(123, secondMachine.getPortNumber());
        assertEquals(null, secondMachine.getGPTFilePath());
        assertEquals("Windows", secondMachine.getOperatingSystemName());
        assertEquals("guest", secondMachine.getPassword());
        assertEquals("guest", secondMachine.getUsername());
        assertEquals("d:\\shared-folder", secondMachine.getSharedFolderPath());
    }

    @Test
    public void testFormatAndParseRemoteMachines() throws ConversionException {
        RemoteMachineProperties firstRemoteMachine = new RemoteMachineProperties();
        firstRemoteMachine.setHostName("192.168.61.19");
        firstRemoteMachine.setPortNumber(22);
        firstRemoteMachine.setUsername("jean");
        firstRemoteMachine.setPassword("jean");
        firstRemoteMachine.setOperatingSystemName("Windows");
        firstRemoteMachine.setSharedFolderPath("d:\\shared-folder");
        firstRemoteMachine.setGPTFilePath(null);

        RemoteMachineProperties secondRemoteMachine = new RemoteMachineProperties();
        secondRemoteMachine.setHostName("127.0.0.1");
        secondRemoteMachine.setPortNumber(123);
        secondRemoteMachine.setUsername("username");
        secondRemoteMachine.setPassword("password");
        secondRemoteMachine.setOperatingSystemName("Linux");
        secondRemoteMachine.setSharedFolderPath("/home/username/remote-shared");
        secondRemoteMachine.setGPTFilePath("/home/username/snap/gpt");

        RemoteMachineProperties[] remoteMachinesFormatted = new RemoteMachineProperties[] { firstRemoteMachine, secondRemoteMachine };

        RemoteMachinePropertiesConverter converter = new RemoteMachinePropertiesConverter();

        String text = converter.format(remoteMachinesFormatted);
        assertNotNull(text);

        RemoteMachineProperties[] remoteMachinesParsed = converter.parse(text);
        assertNotNull(text);

        assertNotNull(remoteMachinesParsed);
        assertEquals(2, remoteMachinesParsed.length);

        RemoteMachineProperties firstMachine = remoteMachinesParsed[0];
        assertNotNull(firstMachine);
        assertEquals("192.168.61.19", firstMachine.getHostName());
        assertEquals(22, firstMachine.getPortNumber());
        assertEquals(null, firstMachine.getGPTFilePath());
        assertEquals("Windows", firstMachine.getOperatingSystemName());
        assertEquals("jean", firstMachine.getPassword());
        assertEquals("jean", firstMachine.getUsername());
        assertEquals("d:\\shared-folder", firstMachine.getSharedFolderPath());

        RemoteMachineProperties secondMachine = remoteMachinesParsed[1];
        assertNotNull(secondMachine);
        assertEquals("127.0.0.1", secondMachine.getHostName());
        assertEquals(123, secondMachine.getPortNumber());
        assertEquals("/home/username/snap/gpt", secondMachine.getGPTFilePath());
        assertEquals("Linux", secondMachine.getOperatingSystemName());
        assertEquals("password", secondMachine.getPassword());
        assertEquals("username", secondMachine.getUsername());
        assertEquals("/home/username/remote-shared", secondMachine.getSharedFolderPath());
    }
}
